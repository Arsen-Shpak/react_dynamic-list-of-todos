{"version":3,"sources":["components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","api.ts","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["TodoList","todos","findSelectedTodo","selectedTodo","className","map","todo","id","completed","cn","title","type","onClick","TodoFilter","query","setQuery","setField","resetQuery","onChange","event","target","value","placeholder","style","pointerEvents","Loader","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","getTodos","getUser","userId","TodoModal","resetSelectedTodo","useState","selectedUser","setSelectedUser","a","userFromServer","useEffect","getUserfromServer","href","email","name","App","setTodos","field","setSelectedTodo","todosFromServer","getTodoses","filteredTodos","filter","toLowerCase","includes","length","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.213e0e4a.chunk.js","sourcesContent":["import React from 'react';\nimport cn from 'classnames';\nimport { Todo } from '../../types/Todo';\n// import { User } from '../../types/User';\n// import { getUser } from '../../api';\n\ntype Props = {\n  todos: Todo[];\n  findSelectedTodo: (todo:Todo) => void;\n  selectedTodo: Todo | null;\n};\n\nexport const TodoList: React.FC<Props> = (\n  { todos, findSelectedTodo, selectedTodo },\n) => {\n  return (\n    <table className=\"table is-narrow is-fullwidth\">\n      <thead>\n        <tr>\n          <th>#</th>\n          <th>\n            <span className=\"icon\">\n              <i className=\"fas fa-check\" />\n            </span>\n          </th>\n          <th>Title</th>\n          <th> </th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {todos.map((todo) => (\n          <tr data-cy=\"todo\" className=\"\">\n            <td className=\"is-vcentered\">{todo.id}</td>\n            <td className=\"is-vcentered\">\n              {todo.completed && (\n                <span className=\"icon\" data-cy=\"iconCompleted\">\n                  <i className=\"fas fa-check\" />\n                </span>\n              )}\n            </td>\n            <td className=\"is-vcentered is-expanded\">\n              <p\n                className={cn({\n                  'has-text-success': todo.completed,\n                  'has-text-danger': !todo.completed,\n                })}\n              >\n                {todo.title}\n              </p>\n            </td>\n            <td className=\"has-text-right is-vcentered\">\n              <button\n                data-cy=\"selectButton\"\n                className=\"button\"\n                type=\"button\"\n                onClick={() => findSelectedTodo(todo)}\n              >\n                <span className=\"icon\">\n                  <i className={cn('far', {\n                    'fa-eye': !selectedTodo,\n                    'fa-eye-slash': selectedTodo,\n                  })}\n                  />\n                </span>\n              </button>\n            </td>\n          </tr>\n        ))}\n        {/* <tr data-cy=\"todo\" className=\"\">\n        <td className=\"is-vcentered\">1</td>\n        <td className=\"is-vcentered\" />\n        <td className=\"is-vcentered is-expanded\">\n          <p className=\"has-text-danger\">delectus aut autem</p>\n        </td>\n        <td className=\"has-text-right is-vcentered\">\n          <button data-cy=\"selectButton\" className=\"button\" type=\"button\">\n            <span className=\"icon\">\n              <i className=\"far fa-eye\" />\n            </span>\n          </button>\n        </td>\n      </tr>\n      <tr data-cy=\"todo\" className=\"has-background-info-light\">\n        <td className=\"is-vcentered\">2</td>\n        <td className=\"is-vcentered\" />\n        <td className=\"is-vcentered is-expanded\">\n          <p className=\"has-text-danger\">quis ut nam facilis et officia qui</p>\n        </td>\n        <td className=\"has-text-right is-vcentered\">\n          <button data-cy=\"selectButton\" className=\"button\" type=\"button\">\n            <span className=\"icon\">\n              <i className=\"far fa-eye-slash\" />\n            </span>\n          </button>\n        </td>\n      </tr>\n\n      <tr data-cy=\"todo\" className=\"\">\n        <td className=\"is-vcentered\">1</td>\n        <td className=\"is-vcentered\" />\n        <td className=\"is-vcentered is-expanded\">\n          <p className=\"has-text-danger\">delectus aut autem</p>\n        </td>\n        <td className=\"has-text-right is-vcentered\">\n          <button data-cy=\"selectButton\" className=\"button\" type=\"button\">\n            <span className=\"icon\">\n              <i className=\"far fa-eye\" />\n            </span>\n          </button>\n        </td>\n      </tr>\n\n      <tr data-cy=\"todo\" className=\"\">\n        <td className=\"is-vcentered\">6</td>\n        <td className=\"is-vcentered\" />\n        <td className=\"is-vcentered is-expanded\">\n          <p className=\"has-text-danger\">\n            qui ullam ratione quibusdam voluptatem quia omnis\n          </p>\n        </td>\n        <td className=\"has-text-right is-vcentered\">\n          <button data-cy=\"selectButton\" className=\"button\" type=\"button\">\n            <span className=\"icon\">\n              <i className=\"far fa-eye\" />\n            </span>\n          </button>\n        </td>\n      </tr>\n\n      <tr data-cy=\"todo\" className=\"\">\n        <td className=\"is-vcentered\">8</td>\n        <td className=\"is-vcentered\">\n          <span className=\"icon\" data-cy=\"iconCompleted\">\n            <i className=\"fas fa-check\" />\n          </span>\n        </td>\n        <td className=\"is-vcentered is-expanded\">\n          <p className=\"has-text-success\">quo adipisci enim quam ut ab</p>\n        </td>\n        <td className=\"has-text-right is-vcentered\">\n          <button data-cy=\"selectButton\" className=\"button\" type=\"button\">\n            <span className=\"icon\">\n              <i className=\"far fa-eye\" />\n            </span>\n          </button>\n        </td>\n      </tr> */}\n      </tbody>\n    </table>\n  );\n};\n","import React from 'react';\n\ntype Props = {\n  query: string;\n  setQuery: (field: string) => void;\n  setField: (field: string) => void;\n  resetQuery: () => void;\n};\n\nexport const TodoFilter: React.FC<Props> = ({\n  query,\n  setQuery,\n  setField,\n  resetQuery,\n}) => (\n  <form className=\"field has-addons\">\n    <p className=\"control\">\n      <span className=\"select\">\n        <select\n          data-cy=\"statusSelect\"\n          onChange={(event) => {\n            setField(event.target.value);\n          }}\n        >\n          <option value=\"all\">All</option>\n          <option value=\"active\">Active</option>\n          <option value=\"completed\">Completed</option>\n        </select>\n      </span>\n    </p>\n\n    <p className=\"control is-expanded has-icons-left has-icons-right\">\n      <input\n        data-cy=\"searchInput\"\n        type=\"text\"\n        className=\"input\"\n        placeholder=\"Search...\"\n        value={query}\n        onChange={(event) => {\n          setQuery(event.target.value);\n        }}\n      />\n      <span className=\"icon is-left\">\n        <i className=\"fas fa-magnifying-glass\" />\n      </span>\n      {query && (\n        <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n          {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n          <button\n            data-cy=\"clearSearchButton\"\n            type=\"button\"\n            className=\"delete\"\n            onClick={resetQuery}\n          />\n        </span>\n      )}\n    </p>\n  </form>\n);\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React, { useState, useEffect } from 'react';\nimport { Loader } from '../Loader';\nimport { Todo } from '../../types/Todo';\nimport { User } from '../../types/User';\nimport { getUser } from '../../api';\n\ntype Props = {\n  selectedTodo: Todo;\n  resetSelectedTodo: () => void;\n};\n\nexport const TodoModal: React.FC<Props> = (\n  { selectedTodo, resetSelectedTodo },\n) => {\n  const [selectedUser, setSelectedUser] = useState<User | null>(null);\n\n  async function getUserfromServer(userId: number) {\n    const userFromServer = await getUser(userId);\n\n    setSelectedUser(userFromServer);\n  }\n\n  useEffect(() => {\n    getUserfromServer(selectedTodo.userId);\n  }, []);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {!selectedUser ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${selectedTodo.id}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={resetSelectedTodo}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {selectedTodo.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {selectedTodo.completed ? (\n                <strong className=\"has-text-success\">Done</strong>\n              ) : (\n                <strong className=\"has-text-danger\">Planned</strong>\n              )}\n\n              {' by '}\n\n              <a href={`mailto:${selectedUser.email}`}>\n                {selectedUser.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useState, useEffect } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport { Todo } from './types/Todo';\n// import { User } from './types/User';\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { getTodos } from './api';\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [field, setField] = useState('all');\n  const [query, setQuery] = useState('');\n  const [selectedTodo, setSelectedTodo] = useState<Todo | null>(null);\n  // const [seletedUser, setSelectedUser] = useState<User | null>(null);\n\n  async function getTodoses() {\n    const todosFromServer = await getTodos();\n\n    setTodos(todosFromServer);\n  }\n\n  useEffect(() => {\n    getTodoses();\n  }, []);\n\n  const filteredTodos = todos.filter(todo => {\n    switch (field) {\n      case 'active':\n        return !todo.completed;\n      case 'completed':\n        return todo.completed;\n      default:\n        return true;\n    }\n  }).filter(todo => todo.title.toLowerCase().includes(query.toLowerCase()));\n\n  const findSelectedTodo = (todo:Todo) => {\n    setSelectedTodo(todo);\n  };\n\n  const reserQuery = () => {\n    setQuery('');\n  };\n\n  const resetSelectedTodo = () => {\n    setSelectedTodo(null);\n  };\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                query={query}\n                setQuery={setQuery}\n                setField={setField}\n                resetQuery={reserQuery}\n              />\n            </div>\n\n            <div className=\"block\">\n              {todos.length === 0 && <Loader />}\n              <TodoList\n                todos={filteredTodos}\n                findSelectedTodo={findSelectedTodo}\n                selectedTodo={selectedTodo}\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {selectedTodo && (\n        <TodoModal\n          selectedTodo={selectedTodo}\n          resetSelectedTodo={resetSelectedTodo}\n        />\n      )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}